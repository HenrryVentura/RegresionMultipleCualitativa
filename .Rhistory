### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion<- function (data,ajuste){
#creamos las variables dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
#extraemos las Betas o coeficientes de prediccion
Betas <- ajuste$resultados[,1]
#creamos nuestra matriz de variables predictoras
dummy <- as.matrix(cbind(1, Xn))
#calculamos las predicciones
y_predicciones <- x %*% Betas
return(y_predicciones)
}
### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/datosoriginales.xlsx")
print(df)
RLM_qual<- function(data) {
# Crear variable dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
# Crear matriz de dise?o X y vector de respuesta Y
X <- as.matrix(dummy)
Y <- data[, 1]  # Suponiendo que la variable de respuesta esta en la primera columna
# Calcular XtX, su inversa y XtY
XtX <- t(X) %*% X
inv_XtX <- solve(XtX)
XtY <- t(X) %*% Y
# Calcular coeficientes de regresi?n
betas <- inv_XtX %*% XtY
# Valores de prediccion
y_pred <- X %*% betas
# errores Residuales
error <- Y - y_pred
# Residual de varianza
var_residual <- sum(error^2) / (length(Y) - ncol(X))
# Covarianza de la matriz de beta
cov_beta <- var_residual * (solve(t(X) %*% X))
# Estandarizar errores de los coeficientes de beta
se_beta <- sqrt(diag(cov_beta))
# t-valores de coeficientes de beta
t_beta <- betas / se_beta
p_beta <- 2 * pt(abs(t_beta), df = length(Y) - ncol(X), lower.tail = FALSE)
# Generar tabla de resultados
results <- data.frame(coeficientes = betas, error_estandar = se_beta, t = t_beta, p_valor = p_beta)
row.names(results) <- c("intercepto", colnames(X)[-1])
# Calcular medidas de ajuste
Minimo <- min(error)
Maximo <- max(error)
RSE <- sqrt(var_residual)
SCE <- sum(error^2)
SST <- sum((Y - mean(Y))^2)
R_cuadrado <- 1 - (SCE / SST)
R_cuadrado_ajustado <- 1 - ((1 - R_cuadrado) * ((length(Y) - 1) / (length(Y) - ncol(X) - 1)))
valores <- list(
Minimo = Minimo,
Maximo = Maximo,
Residual_Standard_error = RSE,
R_cuadrado = R_cuadrado,
Ajustada_R_cuadrado = R_cuadrado_ajustado,
resultados = results
)
return(valores)
}
RLM_qual(df)
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion<- function (Xn,ajuste){
#creamos las variables dummy
X<- model.matrix(~.-1, data = data)
X<- dummy[, -1]
#extraemos las Betas o coeficientes de prediccion
Betas <- ajuste$resultados[,1]
#creamos nuestra matriz de variables predictoras
X<- as.matrix(cbind(1, Xn))
#calculamos las predicciones
y_predicciones <- x %*% Betas
return(y_predicciones)
}
prediccion(Xn= df,ajuste = RLM_qual)
### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/datosoriginales.xlsx")
print(df)
RLM_qual<- function(data) {
# Crear variable dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
# Crear matriz de dise?o X y vector de respuesta Y
X <- as.matrix(dummy)
Y <- data[, 1]  # Suponiendo que la variable de respuesta esta en la primera columna
# Calcular XtX, su inversa y XtY
XtX <- t(X) %*% X
inv_XtX <- solve(XtX)
XtY <- t(X) %*% Y
# Calcular coeficientes de regresi?n
betas <- inv_XtX %*% XtY
# Valores de prediccion
y_pred <- X %*% betas
# errores Residuales
error <- Y - y_pred
# Residual de varianza
var_residual <- sum(error^2) / (length(Y) - ncol(X))
# Covarianza de la matriz de beta
cov_beta <- var_residual * (solve(t(X) %*% X))
# Estandarizar errores de los coeficientes de beta
se_beta <- sqrt(diag(cov_beta))
# t-valores de coeficientes de beta
t_beta <- betas / se_beta
p_beta <- 2 * pt(abs(t_beta), df = length(Y) - ncol(X), lower.tail = FALSE)
# Generar tabla de resultados
results <- data.frame(coeficientes = betas, error_estandar = se_beta, t = t_beta, p_valor = p_beta)
row.names(results) <- c("intercepto", colnames(X)[-1])
# Calcular medidas de ajuste
Minimo <- min(error)
Maximo <- max(error)
RSE <- sqrt(var_residual)
SCE <- sum(error^2)
SST <- sum((Y - mean(Y))^2)
R_cuadrado <- 1 - (SCE / SST)
R_cuadrado_ajustado <- 1 - ((1 - R_cuadrado) * ((length(Y) - 1) / (length(Y) - ncol(X) - 1)))
valores <- list(
Minimo = Minimo,
Maximo = Maximo,
Residual_Standard_error = RSE,
R_cuadrado = R_cuadrado,
Ajustada_R_cuadrado = R_cuadrado_ajustado,
resultados = results
)
return(valores)
}
resultados<-RLM_qual(df)
print(resultados)
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion<- function (Xn,ajuste){
#creamos las variables dummy
dummy<- model.matrix(~.-1, data = data)
X<- dummy[, -1]
#extraemos las Betas o coeficientes de prediccion
Betas <- ajuste$resultados[,1]
#creamos nuestra matriz de variables predictoras
X<- as.matrix(cbind(1, Xn))
#calculamos las predicciones
y_predicciones <- x %*% Betas
return(y_predicciones)
}
predicciones<-prediccion(Xn= df,ajuste = resultados)
print(resultados)
### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/datosoriginales.xlsx")
print(df)
RLM_qual<- function(data) {
# Crear variable dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
# Crear matriz de dise?o X y vector de respuesta Y
X <- as.matrix(dummy)
Y <- data[, 1]  # Suponiendo que la variable de respuesta esta en la primera columna
# Calcular XtX, su inversa y XtY
XtX <- t(X) %*% X
inv_XtX <- solve(XtX)
XtY <- t(X) %*% Y
# Calcular coeficientes de regresi?n
betas <- inv_XtX %*% XtY
# Valores de prediccion
y_pred <- X %*% betas
# errores Residuales
error <- Y - y_pred
# Residual de varianza
var_residual <- sum(error^2) / (length(Y) - ncol(X))
# Covarianza de la matriz de beta
cov_beta <- var_residual * (solve(t(X) %*% X))
# Estandarizar errores de los coeficientes de beta
se_beta <- sqrt(diag(cov_beta))
# t-valores de coeficientes de beta
t_beta <- betas / se_beta
p_beta <- 2 * pt(abs(t_beta), df = length(Y) - ncol(X), lower.tail = FALSE)
# Generar tabla de resultados
results <- data.frame(coeficientes = betas, error_estandar = se_beta, t = t_beta, p_valor = p_beta)
row.names(results) <- c("intercepto", colnames(X)[-1])
# Calcular medidas de ajuste
Minimo <- min(error)
Maximo <- max(error)
RSE <- sqrt(var_residual)
SCE <- sum(error^2)
SST <- sum((Y - mean(Y))^2)
R_cuadrado <- 1 - (SCE / SST)
R_cuadrado_ajustado <- 1 - ((1 - R_cuadrado) * ((length(Y) - 1) / (length(Y) - ncol(X) - 1)))
valores <- list(
Minimo = Minimo,
Maximo = Maximo,
Residual_Standard_error = RSE,
R_cuadrado = R_cuadrado,
Ajustada_R_cuadrado = R_cuadrado_ajustado,
resultados = results
)
return(valores)
}
resultados<-RLM_qual(df)
print(resultados)
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion<- function (Xn,ajuste){
#creamos las variables dummy
dummy<- model.matrix(~.-1, data = data)
X<- dummy[, -1]
#extraemos las Betas o coeficientes de prediccion
Betas <- ajuste$resultados[,1]
#creamos nuestra matriz de variables predictoras
X<- as.matrix(cbind(1, Xn))
#calculamos las predicciones
y_predicciones <- x %*% Betas
return(y_predicciones)
}
predicciones<-prediccion(Xn= df,ajuste = resultados)
print(predicciones)
### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/datosoriginales.xlsx")
print(df)
RLM_qual<- function(data) {
# Crear variable dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
# Crear matriz de dise?o X y vector de respuesta Y
X <- as.matrix(dummy)
Y <- data[, 1]  # Suponiendo que la variable de respuesta esta en la primera columna
# Calcular XtX, su inversa y XtY
XtX <- t(X) %*% X
inv_XtX <- solve(XtX)
XtY <- t(X) %*% Y
# Calcular coeficientes de regresi?n
betas <- inv_XtX %*% XtY
# Valores de prediccion
y_pred <- X %*% betas
# errores Residuales
error <- Y - y_pred
# Residual de varianza
var_residual <- sum(error^2) / (length(Y) - ncol(X))
# Covarianza de la matriz de beta
cov_beta <- var_residual * (solve(t(X) %*% X))
# Estandarizar errores de los coeficientes de beta
se_beta <- sqrt(diag(cov_beta))
# t-valores de coeficientes de beta
t_beta <- betas / se_beta
p_beta <- 2 * pt(abs(t_beta), df = length(Y) - ncol(X), lower.tail = FALSE)
# Generar tabla de resultados
results <- data.frame(coeficientes = betas, error_estandar = se_beta, t = t_beta, p_valor = p_beta)
row.names(results) <- c("intercepto", colnames(X)[-1])
# Calcular medidas de ajuste
Minimo <- min(error)
Maximo <- max(error)
RSE <- sqrt(var_residual)
SCE <- sum(error^2)
SST <- sum((Y - mean(Y))^2)
R_cuadrado <- 1 - (SCE / SST)
R_cuadrado_ajustado <- 1 - ((1 - R_cuadrado) * ((length(Y) - 1) / (length(Y) - ncol(X) - 1)))
valores <- list(
Minimo = Minimo,
Maximo = Maximo,
Residual_Standard_error = RSE,
R_cuadrado = R_cuadrado,
Ajustada_R_cuadrado = R_cuadrado_ajustado,
resultados = results
)
return(valores)
}
resultados<-RLM_qual(df)
print(resultados)
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion <- function(Xn, ajuste) {
# Crear las variables dummy
dummy <- model.matrix(~.-1, data = Xn)
X <- dummy[, -1]
# Extraer las betas o coeficientes de predicción
betas <- ajuste$resultados[, 1]
# Crear la matriz de variables predictoras
X <- as.matrix(cbind(1, X))
# Calcular las predicciones
y_predicciones <- X %*% betas
return(y_predicciones)
}
predicciones <- prediccion(Xn = df, ajuste = resultados)
print(predicciones)
### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/datosoriginales.xlsx")
print(df)
RLM_qual<- function(data) {
# Crear variable dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
# Crear matriz de dise?o X y vector de respuesta Y
X <- as.matrix(dummy)
Y <- data[, 1]  # Suponiendo que la variable de respuesta esta en la primera columna
# Calcular XtX, su inversa y XtY
XtX <- t(X) %*% X
inv_XtX <- solve(XtX)
XtY <- t(X) %*% Y
# Calcular coeficientes de regresi?n
betas <- inv_XtX %*% XtY
# Valores de prediccion
y_pred <- X %*% betas
# errores Residuales
error <- Y - y_pred
# Residual de varianza
var_residual <- sum(error^2) / (length(Y) - ncol(X))
# Covarianza de la matriz de beta
cov_beta <- var_residual * (solve(t(X) %*% X))
# Estandarizar errores de los coeficientes de beta
se_beta <- sqrt(diag(cov_beta))
# t-valores de coeficientes de beta
t_beta <- betas / se_beta
p_beta <- 2 * pt(abs(t_beta), df = length(Y) - ncol(X), lower.tail = FALSE)
# Generar tabla de resultados
results <- data.frame(coeficientes = betas, error_estandar = se_beta, t = t_beta, p_valor = p_beta)
row.names(results) <- c("intercepto", colnames(X)[-1])
# Calcular medidas de ajuste
Minimo <- min(error)
Maximo <- max(error)
RSE <- sqrt(var_residual)
SCE <- sum(error^2)
SST <- sum((Y - mean(Y))^2)
R_cuadrado <- 1 - (SCE / SST)
R_cuadrado_ajustado <- 1 - ((1 - R_cuadrado) * ((length(Y) - 1) / (length(Y) - ncol(X) - 1)))
valores <- list(
Minimo = Minimo,
Maximo = Maximo,
Residual_Standard_error = RSE,
R_cuadrado = R_cuadrado,
Ajustada_R_cuadrado = R_cuadrado_ajustado,
resultados = results
)
return(valores)
}
resultados<-RLM_qual(df)
print(resultados)
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion <- function(Xn, ajuste) {
# Crear las variables dummy
dummy <- model.matrix(~.-1, data = Xn)
X <- dummy[, -1]
# Extraer las betas o coeficientes de predicción
betas <- ajuste$resultados[, 1]
# Crear la matriz de variables predictoras
X <- as.matrix(cbind(1, X))
# Calcular las predicciones
y_predicciones <- X %*% betas
return(y_predicciones)
}
predicciones <- prediccion(Xn = df, ajuste = resultados)
print(predicciones)
### Paso 1: Indicar el directorio de trabajo
# es decir, la carpeta donde está mi base datos
setwd("C:\\Users\\Henrry\\OneDrive - Universidad Autónoma Chapingo\\Documentos\\Zootecnia 4to\\2do Semestre\\Introduccion al computo")
#Descargar paquete para leer excel
#install.packages("openxlsx")
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/datosoriginales.xlsx")
print(df)
RLM_qual<- function(data) {
# Crear variable dummy
dummy <- model.matrix(~.-1, data = data)
dummy <- dummy[, -1]
# Crear matriz de dise?o X y vector de respuesta Y
X <- as.matrix(dummy)
Y <- data[, 1]  # Suponiendo que la variable de respuesta esta en la primera columna
# Calcular XtX, su inversa y XtY
XtX <- t(X) %*% X
inv_XtX <- solve(XtX)
XtY <- t(X) %*% Y
# Calcular coeficientes de regresi?n
betas <- inv_XtX %*% XtY
# Valores de prediccion
y_pred <- X %*% betas
# errores Residuales
error <- Y - y_pred
# Residual de varianza
var_residual <- sum(error^2) / (length(Y) - ncol(X))
# Covarianza de la matriz de beta
cov_beta <- var_residual * (solve(t(X) %*% X))
# Estandarizar errores de los coeficientes de beta
se_beta <- sqrt(diag(cov_beta))
# t-valores de coeficientes de beta
t_beta <- betas / se_beta
p_beta <- 2 * pt(abs(t_beta), df = length(Y) - ncol(X), lower.tail = FALSE)
# Generar tabla de resultados
results <- data.frame(coeficientes = betas, error_estandar = se_beta, t = t_beta, p_valor = p_beta)
row.names(results) <- c("intercepto", colnames(X)[-1])
# Calcular medidas de ajuste
Minimo <- min(error)
Maximo <- max(error)
RSE <- sqrt(var_residual)
SCE <- sum(error^2)
SST <- sum((Y - mean(Y))^2)
R_cuadrado <- 1 - (SCE / SST)
R_cuadrado_ajustado <- 1 - ((1 - R_cuadrado) * ((length(Y) - 1) / (length(Y) - ncol(X) - 1)))
valores <- list(
Minimo = Minimo,
Maximo = Maximo,
Residual_Standard_error = RSE,
R_cuadrado = R_cuadrado,
Ajustada_R_cuadrado = R_cuadrado_ajustado,
resultados = results
)
return(valores)
}
resultados<-RLM_qual(df)
print(resultados)
library(openxlsx)
df <- read.xlsx("C:/Users/Henrry/OneDrive - Universidad Autónoma Chapingo/Documentos/Zootecnia 4to/2do Semestre/Introduccion al computo/Datos.xlsx")
print(df)
prediccion <- function(Xn, ajuste) {
# Crear las variables dummy
dummy <- model.matrix(~.-1, data = Xn)
X <- dummy[, -1]
# Extraer las betas o coeficientes de predicción
betas <- ajuste$resultados[, 1]
# Crear la matriz de variables predictoras
X <- as.matrix(cbind(1, X))
# Calcular las predicciones
y_predicciones <- X %*% betas
return(y_predicciones)
}
predicciones <- prediccion(Xn = df, ajuste = resultados)
print(predicciones)
